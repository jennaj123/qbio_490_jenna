colnames(clinical)[colnames(clinical) == "bcr_patient_barcode"] <- "Tumor_Sample_Barcode"
#changing the name of one of the columns in clinical data in order to use maf
#View(CPR_cleaned_clinical)
#creating a survival time column, and death event column
CPR_cleaned_clinical$survival_time <-ifelse(is.na(CPR_cleaned_clinical$days_to_death), CPR_cleaned_clinical$survival_time <-CPR_cleaned_clinical$days_to_last_followup, CPR_cleaned_clinical$survival_time <-CPR_cleaned_clinical$days_to_death)
CPR_cleaned_clinical$death_event <- ifelse(CPR_cleaned_clinical$vital_status == "Alive", CPR_cleaned_clinical$days_to_death <-FALSE, CPR_cleaned_clinical$death_event <- TRUE)
#survival and fit object
CPR_surv_object <- Surv(time = CPR_cleaned_clinical$survival_time, event = CPR_cleaned_clinical$death_event)
CPR_fit <- survfit(surv_object_CPR ~ CPR_cleaned_clinical$breast_carcinoma_progesterone_receptor_status, data = CPR_cleaned_clinical)
CPR_surv_object <- Surv(time = CPR_cleaned_clinical$survival_time, event = CPR_cleaned_clinical$death_event)
CPR_fit <- survfit(CPR_surv_object ~ CPR_cleaned_clinical$breast_carcinoma_progesterone_receptor_status, data = CPR_cleaned_clinical)
survplot_CPR <- survfit(CPR_surv_object, pval = TRUE, ggtheme = theme(plot.margin = unit(c(1,1,1,1), "cm")), legend = "right")
survplot_CPR <- ggsurvplot(CPR_fit, pval = TRUE, ggtheme = theme(plot.margin = unit(c(1,1,1,1), "cm")), legend = "right")
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/CPR_KM_Plot.jpg")
KM_Plot_CPR = survplot_CPR$plot + theme_classic() + theme(axis.title = element_text(size = 20), axis.text = element_text(size=16), legend.title = element_text(size = 14), lengend.text = element_text(size = 12))
KM_Plot_CPR
KM_Plot_CPR = survplot_CPR$plot + theme_bw() + theme(axis.title = element_text(size = 20), axis.text = element_text(size=16), legend.title = element_text(size = 14), lengend.text = element_text(size = 12))
KM_Plot_CPR
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/CPR_KM_Plot.jpg")
KM_Plot_CPR = survplot_CPR$plot + theme_bw() + theme(axis.title = element_text(size = 20), axis.text = element_text(size=16), legend.title = element_text(size = 14), lengend.text = element_text(size = 12))
KM_Plot_CPR
?KM_Plot_CPR
?KM_Plot
KM_Plot_CPR = survplot_CPR$plot + theme_bw() + theme(axis.title = element_text(size = 20), axis.text = element_text(size=16), legend.title = element_text(size = 14))
KM_Plot_CPR
dev.off()
Carcinoma_progesterone_receptor_mask <- ifelse(clinical$breast_carcinoma_progesterone_receptor_status == "Positive", TRUE, FALSE)
CarProgRecNA_mask <- ifelse(clinical$breast_carcinoma_estrogen_receptor_status == "", F, T)
CPR_cleaned_clinical <-clinical[CarProgRecNA_mask, ] #removes the NA values
CarProgRecPOSITIVE_clinical <- clinical[Carcinoma_progesterone_receptor_mask, ]
CarProgRecNEGATIVE_clinical <- clinical[!Carcinoma_progesterone_receptor_mask, ]
#subsets for either positive or negative
colnames(clinical)[colnames(clinical) == "bcr_patient_barcode"] <- "Tumor_Sample_Barcode"
#changing the name of one of the columns in clinical data in order to use maf
#View(CPR_cleaned_clinical)
#creating a survival time column, and death event column
CPR_cleaned_clinical$survival_time <-ifelse(is.na(CPR_cleaned_clinical$days_to_death), CPR_cleaned_clinical$survival_time <-CPR_cleaned_clinical$days_to_last_followup, CPR_cleaned_clinical$survival_time <-CPR_cleaned_clinical$days_to_death)
CPR_cleaned_clinical$death_event <- ifelse(CPR_cleaned_clinical$vital_status == "Alive", CPR_cleaned_clinical$days_to_death <-FALSE, CPR_cleaned_clinical$death_event <- TRUE)
#survival and fit object
CPR_surv_object <- Surv(time = CPR_cleaned_clinical$survival_time, event = CPR_cleaned_clinical$death_event)
CPR_fit <- survfit(CPR_surv_object ~ CPR_cleaned_clinical$breast_carcinoma_progesterone_receptor_status, data = CPR_cleaned_clinical)
#creating the survival plot
survplot_CPR <- ggsurvplot(CPR_fit, pval = TRUE, ggtheme = theme(plot.margin = unit(c(1,1,1,1), "cm")), legend = "right")
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/CPR_KM_Plot.jpg")
KM_Plot_CPR = survplot_CPR$plot + theme_bw() + theme(axis.title = element_text(size = 20), axis.text = element_text(size=16), legend.title = element_text(size = 14))
KM_Plot_CPR
dev.off()
KM_Plot_CPR
CarProgRecPOSITIVE_clinical <- CPR_cleaned_clinical[Carcinoma_progesterone_receptor_mask, ]
positive_maf <- subsetMaf(maf = maf_object, tsb = CarProgRecPOSITIVE_clinical)
arProgRecPOSITIVE_clinical <- CPR_cleaned_clinical[Carcinoma_progesterone_receptor_mask, ]
positive_barcodes <- CPR_cleaned_clinical[CPR_cleaned_clinical$breast_cancer_surgery_margin_status == "Positive", 1]
positive_maf <- subsetMaf(maf = maf_object, tsb = positive_barcodes)
CarProgRecNEGATIVE_clinical <- CPR_cleaned_clinical[!Carcinoma_progesterone_receptor_mask, ]
negative_barcodes <- CPR_cleaned_clinical[CPR_cleaned_clinical$breast_cancer_surgery_margin_status == "Negative", 1]
negative_maf <- subsetMaf(maf = maf_object, tsb = negative_barcodes)
CarProgRecPOSITIVE_clinical <- CPR_cleaned_clinical[Carcinoma_progesterone_receptor_mask, ]
positive_barcodes <- CPR_cleaned_clinical[CPR_cleaned_clinical$breast_cancer_surgery_margin_status == "Positive", 1]
positive_maf <- subsetMaf(maf = maf_object, tsb = positive_barcodes)
CarProgRecNEGATIVE_clinical <- CPR_cleaned_clinical[!Carcinoma_progesterone_receptor_mask, ]
negative_barcodes <- CPR_cleaned_clinical[CPR_cleaned_clinical$breast_cancer_surgery_margin_status == "Negative", 1]
negative_maf <- subsetMaf(maf = maf_object, tsb = negative_barcodes)
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/CPR_coonco.jpg")
coOncoplot(m1 = positive_maf,
m2 = negative_maf,
m1Name = 'Carcinoma Progesterone Receptor Positive',
m2Name = 'Carcinoma Progesterone Receptor Negative'
)
CarProgRecPOSITIVE_clinical <- CPR_cleaned_clinical[Carcinoma_progesterone_receptor_mask, ]
positive_barcodes <- CPR_cleaned_clinical[CPR_cleaned_clinical$breast_cancer_surgery_margin_status == "Positive", 1]
positive_maf <- subsetMaf(maf = maf_object, tsb = positive_barcodes)
CarProgRecNEGATIVE_clinical <- CPR_cleaned_clinical[!Carcinoma_progesterone_receptor_mask, ]
negative_barcodes <- CPR_cleaned_clinical[CPR_cleaned_clinical$breast_cancer_surgery_margin_status == "Negative", 1]
negative_maf <- subsetMaf(maf = maf_object, tsb = negative_barcodes)
#subsets for either positive or negative
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/CPR_coonco.jpg")
coOncoplot(m1 = positive_maf,
m2 = negative_maf,
m1Name = 'Carcinoma Progesterone Receptor Positive',
m2Name = 'Carcinoma Progesterone Receptor Negative'
)
?coOncoplot
CarProgRecPOSITIVE_clinical <- CPR_cleaned_clinical[Carcinoma_progesterone_receptor_mask, ]
positive_barcodes <- CPR_cleaned_clinical[CPR_cleaned_clinical$breast_cancer_surgery_margin_status == "Positive", 1]
positive_maf <- subsetMaf(maf = maf_object, tsb = positive_barcodes)
CarProgRecNEGATIVE_clinical <- CPR_cleaned_clinical[!Carcinoma_progesterone_receptor_mask, ]
negative_barcodes <- CPR_cleaned_clinical[CPR_cleaned_clinical$breast_cancer_surgery_margin_status == "Negative", 1]
negative_maf <- subsetMaf(maf = maf_object, tsb = negative_barcodes)
#subsets for either positive or negative
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/CPR_coonco.jpg")
?coOncoplot(m1 = positive_maf,
m2 = negative_maf,
m1Name = 'Carcinoma Progesterone Receptor Positive',
m2Name = 'Carcinoma Progesterone Receptor Negative',
plot.margin = unit(c(1,1,1,1), "cm")
)
dev.off()
CarProgRecNEGATIVE_clinical <- CPR_cleaned_clinical[!Carcinoma_progesterone_receptor_mask, ]
dir.create("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs")
knitr::opts_knit$set(root.dir = normalizePath("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs"))
if(!require(BiocManager)){ install.packages("BiocManager")
}
library(BiocManager)
BiocManager::install("maftools")
library(maftools)
if(!require(survival)) {BiocManager::install("survival")
}
library(survival)
if(!require(TCGAbiolinks)) {BiocManager::install("TCGAbiolinks")
}
library(TCGAbiolinks)
if(!require(survminer)) {BiocManager::install("survminer")
}
library(survminer)
if(!require(ggplot2)) {BiocManager::install("ggplot2")
}
library(ggplot2)
clinical_query <- GDCquery(project = "TCGA-BRCA", data.category = "Clinical", file.type = "xml")
GDCdownload(clinical_query)
clinical <- GDCprepare_clinic(clinical_query, clinical.info = "patient")
Carcinoma_progesterone_receptor_mask <- ifelse(clinical$breast_carcinoma_progesterone_receptor_status == "Positive", TRUE, FALSE)
CarProgRecNA_mask <- ifelse(clinical$breast_carcinoma_estrogen_receptor_status == "", F, T)
CPR_cleaned_clinical <-clinical[CarProgRecNA_mask, ] #removes the NA values
colnames(clinical)[colnames(clinical) == "bcr_patient_barcode"] <- "Tumor_Sample_Barcode"
#creating a survival time column, and death event column
CPR_cleaned_clinical$survival_time <-ifelse(is.na(CPR_cleaned_clinical$days_to_death), CPR_cleaned_clinical$survival_time <-CPR_cleaned_clinical$days_to_last_followup, CPR_cleaned_clinical$survival_time <-CPR_cleaned_clinical$days_to_death)
CPR_cleaned_clinical$death_event <- ifelse(CPR_cleaned_clinical$vital_status == "Alive", CPR_cleaned_clinical$days_to_death <-FALSE, CPR_cleaned_clinical$death_event <- TRUE)
#survival and fit object
CPR_surv_object <- Surv(time = CPR_cleaned_clinical$survival_time, event = CPR_cleaned_clinical$death_event)
CPR_fit <- survfit(CPR_surv_object ~ CPR_cleaned_clinical$breast_carcinoma_progesterone_receptor_status, data = CPR_cleaned_clinical)
#creating the survival plot
survplot_CPR <- ggsurvplot(CPR_fit, pval = TRUE, ggtheme = theme(plot.margin = unit(c(1,1,1,1), "cm")), legend = "right")
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/CPR_KM_Plot.jpg")
KM_Plot_CPR = survplot_CPR$plot + theme_bw() + theme(axis.title = element_text(size = 20), axis.text = element_text(size=16), legend.title = element_text(size = 14))
KM_Plot_CPR
dev.off()
maf_query <- GDCquery(
project = "TCGA-BRCA",
data.category = "Simple Nucleotide Variation",
access = "open",
data.type = "Masked Somatic Mutation",
workflow.type = "Aliquot Ensemble Somatic Variant Merging and Masking"
)
GDCdownload(maf_query)
maf <- GDCprepare(maf_query)
maf_object <- read.maf(maf = maf,
clinicalData = clinical,
isTCGA = TRUE)
CarProgRecPOSITIVE_clinical <- CPR_cleaned_clinical[Carcinoma_progesterone_receptor_mask, ]
positive_barcodes <- CPR_cleaned_clinical[CPR_cleaned_clinical$breast_cancer_surgery_margin_status == "Positive", 1]
positive_maf <- subsetMaf(maf = maf_object, tsb = positive_barcodes)
CarProgRecNEGATIVE_clinical <- CPR_cleaned_clinical[!Carcinoma_progesterone_receptor_mask, ]
negative_barcodes <- CPR_cleaned_clinical[CPR_cleaned_clinical$breast_cancer_surgery_margin_status == "Negative", 1]
negative_maf <- subsetMaf(maf = maf_object, tsb = negative_barcodes)
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/CPR_coonco.jpg")
?coOncoplot(m1 = positive_maf,
m2 = negative_maf,
m1Name = 'Carcinoma Progesterone Receptor Positive',
m2Name = 'Carcinoma Progesterone Receptor Negative',
plot.margin = unit(c(1,1,1,1), "cm")
)
dev.off()
#rna_clinical <- rna_se@colData[!is.na(rna_se@colData$age_at_index), ]
#rna_clinical <- rna_se@colData[!is.na(rna_se@colData$age_at_index), ]
#rna_clinical <- as.data.frame(rna_clinical)
#rna_clinical <- rna_se@colData[!is.na(rna_se@colData$age_at_index), ]
#rna_clinical <- as.data.frame(rna_clinical)
#removes the na data and creates a dataframe of the rna data without the na values
View(CPR_cleaned_clinical)
#mask for only positive breast carcinoma progesterone receptor, and create positive barcodes
CarProgRecPOSITIVE_clinical <- CPR_cleaned_clinical[Carcinoma_progesterone_receptor_mask, ]
positive_barcodes <- CPR_cleaned_clinical[CPR_cleaned_clinical$breast_carcinoma_progesterone_receptor_status == "Positive", 1]
positive_maf <- subsetMaf(maf = maf_object, tsb = positive_barcodes)
CarProgRecNEGATIVE_clinical <- CPR_cleaned_clinical[!Carcinoma_progesterone_receptor_mask, ]
negative_barcodes <- CPR_cleaned_clinical[CPR_cleaned_clinical$breast_carcinoma_progesterone_receptor_status == "Negative", 1]
negative_maf <- subsetMaf(maf = maf_object, tsb = negative_barcodes)
#subsets for either positive or negative
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/CPR_coonco.jpg")
?coOncoplot(m1 = positive_maf,
m2 = negative_maf,
m1Name = 'Carcinoma Progesterone Receptor Positive',
m2Name = 'Carcinoma Progesterone Receptor Negative',
plot.margin = unit(c(1,1,1,1), "cm")
)
dev.off()
dir.create("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs")
knitr::opts_knit$set(root.dir = normalizePath("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs"))
if(!require(BiocManager)){ install.packages("BiocManager")
}
library(BiocManager)
BiocManager::install("maftools")
library(maftools)
if(!require(survival)) {BiocManager::install("survival")
}
library(survival)
if(!require(TCGAbiolinks)) {BiocManager::install("TCGAbiolinks")
}
library(TCGAbiolinks)
if(!require(survminer)) {BiocManager::install("survminer")
}
library(survminer)
if(!require(ggplot2)) {BiocManager::install("ggplot2")
}
library(ggplot2)
clinical_query <- GDCquery(project = "TCGA-BRCA", data.category = "Clinical", file.type = "xml")
GDCdownload(clinical_query)
clinical <- GDCprepare_clinic(clinical_query, clinical.info = "patient")
Carcinoma_progesterone_receptor_mask <- ifelse(clinical$breast_carcinoma_progesterone_receptor_status == "Positive", TRUE, FALSE)
CarProgRecNA_mask <- ifelse(clinical$breast_carcinoma_progesterone_receptor_status == "", F, T)
CPR_cleaned_clinical <-clinical[CarProgRecNA_mask, ] #removes the NA values
colnames(clinical)[colnames(clinical) == "bcr_patient_barcode"] <- "Tumor_Sample_Barcode"
#creating a survival time column, and death event column
CPR_cleaned_clinical$survival_time <-ifelse(is.na(CPR_cleaned_clinical$days_to_death), CPR_cleaned_clinical$survival_time <-CPR_cleaned_clinical$days_to_last_followup, CPR_cleaned_clinical$survival_time <-CPR_cleaned_clinical$days_to_death)
CPR_cleaned_clinical$death_event <- ifelse(CPR_cleaned_clinical$vital_status == "Alive", CPR_cleaned_clinical$days_to_death <-FALSE, CPR_cleaned_clinical$death_event <- TRUE)
#survival and fit object
CPR_surv_object <- Surv(time = CPR_cleaned_clinical$survival_time, event = CPR_cleaned_clinical$death_event)
CPR_fit <- survfit(CPR_surv_object ~ CPR_cleaned_clinical$breast_carcinoma_progesterone_receptor_status, data = CPR_cleaned_clinical)
#creating the survival plot
survplot_CPR <- ggsurvplot(CPR_fit, pval = TRUE, ggtheme = theme(plot.margin = unit(c(1,1,1,1), "cm")), legend = "right")
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/CPR_KM_Plot.jpg")
KM_Plot_CPR = survplot_CPR$plot + theme_bw() + theme(axis.title = element_text(size = 20), axis.text = element_text(size=16), legend.title = element_text(size = 14))
KM_Plot_CPR
dev.off()
#download and query maf
maf_query <- GDCquery(
project = "TCGA-BRCA",
data.category = "Simple Nucleotide Variation",
access = "open",
data.type = "Masked Somatic Mutation",
workflow.type = "Aliquot Ensemble Somatic Variant Merging and Masking"
)
GDCdownload(maf_query)
maf <- GDCprepare(maf_query)
maf_object <- read.maf(maf = maf,
clinicalData = clinical,
isTCGA = TRUE)
#mask for only positive breast carcinoma progesterone receptor, and create positive barcodes
CarProgRecPOSITIVE_clinical <- CPR_cleaned_clinical[Carcinoma_progesterone_receptor_mask, ]
positive_barcodes <- CPR_cleaned_clinical[CPR_cleaned_clinical$breast_carcinoma_progesterone_receptor_status == "Positive", 1]
positive_maf <- subsetMaf(maf = maf_object, tsb = positive_barcodes)
CarProgRecNEGATIVE_clinical <- CPR_cleaned_clinical[!Carcinoma_progesterone_receptor_mask, ]
negative_barcodes <- CPR_cleaned_clinical[CPR_cleaned_clinical$breast_carcinoma_progesterone_receptor_status == "Negative", 1]
negative_maf <- subsetMaf(maf = maf_object, tsb = negative_barcodes)
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/CPR_coonco.jpg")
coOncoplot(m1 = positive_maf,
m2 = negative_maf,
m1Name = 'Carcinoma Progesterone Receptor Positive',
m2Name = 'Carcinoma Progesterone Receptor Negative',
plot.margin = unit(c(1,1,1,1), "cm")
)
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/CPR_coonco.jpg")
coOncoplot(m1 = positive_maf,
m2 = negative_maf,
m1Name = 'Breast Carcinoma Progesterone Receptor Positive',
m2Name = 'Breast Carcinoma Progesterone Receptor Negative',
)
dev.off()
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/CPR_coonco.jpg")
coOncoplot(m1 = positive_maf,
m2 = negative_maf,
m1Name = 'Breast Carcinoma Progesterone Receptor Positive',
m2Name = 'Breast Carcinoma Progesterone Receptor Negative',
)
dev.off()
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/CPR_lollipop.jpg")
lollipopPlot2(m1 = positive_maf, m2 = negative_maf, m1_name = 'Breast Carcinoma Progesterone Receptor Positive',
m2_name = 'Breast Carcinoma Progesterone Receptor Negative', gene = "PIK3CA")
dev.off()
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/CPR_lollipop_PIK3CA.jpg")
lollipopPlot2(m1 = positive_maf, m2 = negative_maf, m1_name = 'Breast Carcinoma Progesterone Receptor Positive',
m2_name = 'Breast Carcinoma Progesterone Receptor Negative', gene = "PIK3CA")
dev.off()
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/CPR_lollipop_BRCA1.jpg")
lollipopPlot2(m1 = positive_maf, m2 = negative_maf, m1_name = 'Breast Carcinoma Progesterone Receptor Positive',
m2_name = 'Breast Carcinoma Progesterone Receptor Negative', gene = "BRCA1")
dev.off()
View(clinical.rad)
View(clinical.drug)
ethnicity_mask <- ifelse(clinical$ethnicity == "HISPANIC OR LATINO", TRUE, FALSE)
ethnicity_NA_mask <- ifelse(clinical$ethnicity == "", F, T)
ethnicity_cleaned_clinical <-clinical[ethnicity_NA_mask, ] #removes the NA values
colnames(clinical)[colnames(clinical) == "bcr_patient_barcode"] <- "Tumor_Sample_Barcode"
#creating a survival time column, and death event column
ethnicity_cleaned_clinical$survival_time <-ifelse(is.na(ethnicity_cleaned_clinical$days_to_death), ethnicity_cleaned_clinical$survival_time <-ethnicity_cleaned_clinical$days_to_last_followup, ethnicity_cleaned_clinical$survival_time <-ethnicity_cleaned_clinical$days_to_death)
ethnicity_cleaned_clinical$death_event <- ifelse(ethnicity_cleaned_clinical$vital_status == "Alive", ethnicity_cleaned_clinical$days_to_death <-FALSE, ethnicity_cleaned_clinical$death_event <- TRUE)
#creating survival and fit object
ethnicity_surv_object <- Surv(time = ethnicity_cleaned_clinical$survival_time, event = ethnicity_cleaned_clinical$death_event)
ethnicity_fit <- survfit(ethnicity_surv_object ~ ethnicity_cleaned_clinical$ethnicity, data = ethnicity_cleaned_clinical)
#creating the survival plot
survplot_ethnicity <- ggsurvplot(ethnicity_fit, pval = TRUE, ggtheme = theme(plot.margin = unit(c(1,1,1,1), "cm")), legend = "right")
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/ethnicity_KM_Plot.jpg")
KM_Plot_ethnicity = survplot_CPR$plot + theme_bw() + theme(axis.title = element_text(size = 20), axis.text = element_text(size=16), legend.title = element_text(size = 14))
KM_Plot_ethnicity
dev.off()
#download and query maf
maf_query <- GDCquery(
project = "TCGA-BRCA",
data.category = "Simple Nucleotide Variation",
access = "open",
data.type = "Masked Somatic Mutation",
workflow.type = "Aliquot Ensemble Somatic Variant Merging and Masking"
)
GDCdownload(maf_query)
maf <- GDCprepare(maf_query)
maf_object <- read.maf(maf = maf,
clinicalData = clinical,
isTCGA = TRUE)
clinical_query <- GDCquery(project = "TCGA-BRCA", data.category = "Clinical", file.type = "xml")
GDCdownload(clinical_query)
clinical <- GDCprepare_clinic(clinical_query, clinical.info = "patient")
GDCdownload(maf_query)
maf <- GDCprepare(maf_query)
maf_object <- read.maf(maf = maf,
clinicalData = clinical,
isTCGA = TRUE)
colnames(clinical)[colnames(clinical) == "bcr_patient_barcode"] <- "Tumor_Sample_Barcode"
maf_query <- GDCquery(
project = "TCGA-BRCA",
data.category = "Simple Nucleotide Variation",
access = "open",
data.type = "Masked Somatic Mutation",
workflow.type = "Aliquot Ensemble Somatic Variant Merging and Masking"
)
GDCdownload(maf_query)
maf <- GDCprepare(maf_query)
maf_object <- read.maf(maf = maf,
clinicalData = clinical,
isTCGA = TRUE)
#mask for only patients that are hispanic or latino, and create positive barcodes
His_Lat_clinical <- ethnicity_cleaned_clinical[ethnicity_mask, ]
ethnicity_cleaned_clinical <-clinical[ethnicity_NA_mask, ] #removes the NA values
ethnicity_mask <- ifelse(clinical$ethnicity == "HISPANIC OR LATINO", TRUE, FALSE)
ethnicity_NA_mask <- ifelse(clinical$ethnicity == "", F, T)
ethnicity_cleaned_clinical <-clinical[ethnicity_NA_mask, ] #removes the NA values
colnames(clinical)[colnames(clinical) == "bcr_patient_barcode"] <- "Tumor_Sample_Barcode"
#creating a survival time column, and death event column
ethnicity_cleaned_clinical$survival_time <-ifelse(is.na(ethnicity_cleaned_clinical$days_to_death), ethnicity_cleaned_clinical$survival_time <-ethnicity_cleaned_clinical$days_to_last_followup, ethnicity_cleaned_clinical$survival_time <-ethnicity_cleaned_clinical$days_to_death)
ethnicity_cleaned_clinical$death_event <- ifelse(ethnicity_cleaned_clinical$vital_status == "Alive", ethnicity_cleaned_clinical$days_to_death <-FALSE, ethnicity_cleaned_clinical$death_event <- TRUE)
#creating survival and fit object
ethnicity_surv_object <- Surv(time = ethnicity_cleaned_clinical$survival_time, event = ethnicity_cleaned_clinical$death_event)
ethnicity_fit <- survfit(ethnicity_surv_object ~ ethnicity_cleaned_clinical$ethnicity, data = ethnicity_cleaned_clinical)
#creating the survival plot
survplot_ethnicity <- ggsurvplot(ethnicity_fit, pval = TRUE, ggtheme = theme(plot.margin = unit(c(1,1,1,1), "cm")), legend = "right")
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/ethnicity_KM_Plot.jpg")
KM_Plot_ethnicity = survplot_CPR$plot + theme_bw() + theme(axis.title = element_text(size = 20), axis.text = element_text(size=16), legend.title = element_text(size = 14))
dev.off()
#download and query maf
maf_query <- GDCquery(
project = "TCGA-BRCA",
data.category = "Simple Nucleotide Variation",
access = "open",
data.type = "Masked Somatic Mutation",
workflow.type = "Aliquot Ensemble Somatic Variant Merging and Masking"
)
GDCdownload(maf_query)
maf <- GDCprepare(maf_query)
maf_object <- read.maf(maf = maf,
clinicalData = clinical,
isTCGA = TRUE)
#mask for only patients that are hispanic or latino, and create positive barcodes
His_Lat_clinical <- ethnicity_cleaned_clinical[ethnicity_mask, ]
positive_barcodes <- ethnicity_cleaned_clinical[ethnicity_cleaned_clinical$ethnicity == "HISPANIC OR LATINO", 1]
positive_maf <- subsetMaf(maf = maf_object, tsb = positive_barcodes)
#mask for patients that are not hispanic or latino, and create negative barcodes
NOT_His_Lat_clinical <- ethnicity_cleaned_clinical[!ethnicity_mask, ]
negative_barcodes <- ethnicity_cleaned_clinical[ethnicity_cleaned_clinical$ethnicity == "NOT HISPANIC OR LATINO", 1]
negative_maf <- subsetMaf(maf = maf_object, tsb = negative_barcodes)
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/ethnicity_coonco.jpg")
coOncoplot(m1 = positive_maf,
m2 = negative_maf,
m1Name = 'Hispanic or Latino',
m2Name = 'Not Hispanic or Latino',
)
peg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/ethnicity_coonco.jpg")
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/ethnicity_coonco.jpg")
coOncoplot(m1 = positive_maf,
m2 = negative_maf,
m1Name = 'Hispanic or Latino',
m2Name = 'Not Hispanic or Latino',
plot.margin = unit(c(1,1,1,1), "cm")
)
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/ethnicity_coonco.jpg")
coOncoplot(m1 = positive_maf,
m2 = negative_maf,
m1Name = 'Hispanic or Latino',
m2Name = 'Not Hispanic or Latino'
)
dev.off()
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/ethnicity_lollipop_PIK3CA.jpg")
lollipopPlot2(m1 = positive_maf, m2 = negative_maf, m1_name = 'Hispanic or Latino',
m2_name = 'Not Hispanic or Latino', gene = "PIK3CA")
dev.off()
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/ethnicity_lollipop_BRCA1.jpg")
lollipopPlot2(m1 = positive_maf, m2 = negative_maf, m1_name = 'Hispanic or Latino',
m2_name = 'Not Hispanic or Latino', gene = "BRCA1")
dev.off()
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/ethnicity_coonco.jpg")
par(mar = c(2, 2, 2, 2))
coOncoplot(m1 = positive_maf,
m2 = negative_maf,
m1Name = 'Hispanic or Latino',
m2Name = 'Not Hispanic or Latino'
)
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/ethnicity_coonco.jpg")
par(mar = c(1, 1, 1, 1))
coOncoplot(m1 = positive_maf,
m2 = negative_maf,
m1Name = 'Hispanic or Latino',
m2Name = 'Not Hispanic or Latino'
)
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/ethnicity_coonco.jpg")
par(mar = c(1, 1, 1, 1))
coOncoplot(m1 = positive_maf,
m2 = negative_maf,
m1Name = 'Hispanic or Latino',
m2Name = 'Not Hispanic or Latino'
)
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/ethnicity_coonco.jpg")
#par(mar = c(1, 1, 1, 1))
coOncoplot(m1 = positive_maf,
m2 = negative_maf,
m1Name = 'Hispanic or Latino',
m2Name = 'Not Hispanic or Latino', ggtheme = theme(plot.margin = unit(c(1,1,1,1), "cm")
)
dev.off()
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/ethnicity_coonco.jpg")
#par(mar = c(1, 1, 1, 1))
coOncoplot(m1 = positive_maf,
m2 = negative_maf,
m1Name = 'Hispanic or Latino',
m2Name = 'Not Hispanic or Latino', ggtheme = theme(plot.margin = unit(c(1,1,1,1), "cm"))
)
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/ethnicity_coonco.jpg")
#par(mar = c(1, 1, 1, 1))
coOncoplot(m1 = positive_maf,
m2 = negative_maf,
m1Name = 'Hispanic or Latino',
m2Name = 'Not Hispanic or Latino')
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/ethnicity_coonco.jpg")
mar = c(1, 1, 1, 1)
coOncoplot(m1 = positive_maf,
m2 = negative_maf,
m1Name = 'Hispanic or Latino',
m2Name = 'Not Hispanic or Latino')
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/ethnicity_coonco.jpg")
par(mar = unit(c(1,1,1,1), "cm"))
coOncoplot(m1 = positive_maf,
m2 = negative_maf,
m1Name = 'Hispanic or Latino',
m2Name = 'Not Hispanic or Latino')
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/ethnicity_coonco.jpg")
coOncoplot(m1 = positive_maf,
m2 = negative_maf,
m1Name = 'Hispanic or Latino',
m2Name = 'Not Hispanic or Latino', par(mar = unit(c(1,1,1,1), "cm")))
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/ethnicity_coonco.jpg")
coOncoplot(m1 = positive_maf,
m2 = negative_maf,
m1Name = 'Hispanic or Latino',
m2Name = 'Not Hispanic or Latino', print.margin = unit(c(1,1,1,1), "cm")))
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/ethnicity_coonco.jpg")
coOncoplot(m1 = positive_maf,
m2 = negative_maf,
m1Name = 'Hispanic or Latino',
m2Name = 'Not Hispanic or Latino', print.margin = unit(c(1,1,1,1), "cm"))
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/ethnicity_coonco.jpg")
coOncoplot(m1 = positive_maf,
m2 = negative_maf,
m1Name = 'Hispanic or Latino',
m2Name = 'Not Hispanic or Latino'
)
View(clinical.rad)
radiation_mask <- ifelse(clinical.rad$radiation_dosage == "", F, T)
?ggplot
clinical.rad <- GDCprepare_clinic(query = clincal_query, clincial.info = "radiation")
#querying the clinical data
clinical.rad <- GDCprepare_clinic(clincal_query, clincial.info = "radiation")
#querying the clinical data
clinical.rad <- GDCprepare_clinic(clincal_query, "radiation")
#querying the clinical data
clinical.rad <- GDCprepare_clinic(query = clincal_query, clincial.info = "radiation")
#querying the clinical data
clinical.drug <- GDCprepare_clinic(query = clincal_query, clincial.info = "drug")
nical.drug <- GDCprepare_clinic(query = clincal_query, clincial.info = "drug")
#querying the clinical data
clinical.rad <- GDCprepare_clinic(query = clincal_query, clincial.info = "radiation")
#querying the clinical data
clinical.rad <- GDCprepare_clinic(clinical_query = clincal_query, clincial.info = "radiation")
#querying the clinical data
clinical.rad <- GDCprepare_clinic(clincal_query, clincial.info = "radiation")
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/ethnicity_coonco.jpg")
par(mar=c(2,2,2,2))
coOncoplot(m1 = positive_maf,
m2 = negative_maf,
m1Name = 'Hispanic or Latino',
m2Name = 'Not Hispanic or Latino'
)
#querying the clinical data
clinical.rad <- GDCprepare_clinic(clinocal_query, clincial.info = "radiation")
#querying the clinical data
clinical.rad <- GDCprepare_clinic(clinical_query, clincial.info = "radiation")
#querying the clinical data
clinical.rad <- GDCprepare_clinic(query = clinical_query, clincial.info = "radiation")
#querying the clinical data
clinical.rad <- GDCprepare_clinic(query = clinical_query, clinical.info = "radiation")
par(mar=c(2,2,2,2))
jpeg("/Users/JennaJacobs/Documents/USC/qbio490/qbio_490_jenna/midsemester_project_jacobs/outputs/ethnicity_coonco.jpg")
coOncoplot(m1 = positive_maf,
m2 = negative_maf,
m1Name = 'Hispanic or Latino',
m2Name = 'Not Hispanic or Latino'
)
